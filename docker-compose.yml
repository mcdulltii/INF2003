version: '3.8'

services:
  app-server:
    container_name: app-server
    build: .
    restart: always
    profiles: ['server', 'all']
    ports:
      - 8000:8000
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=mongo_db
    depends_on:
      - mariadb
      - mongodb
    networks:
      - app_network

  mariadb:
    container_name: mariadb
    image: mariadb
    restart: always
    profiles: ['server', 'all']
    environment:
      - MARIADB_DATABASE=mysql_db
      - MARIADB_ROOT_PASSWORD=password
      - MARIADB_USER=user
      - MARIADB_PASSWORD=password
    volumes:
      # - ./mysql-data:/var/lib/mysql
      - ./docker/mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql:ro
      - ./docker/mysql-import:/mysql-import
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    profiles: ['all']
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - 127.0.0.1:8080:80
    depends_on:
      - mariadb
    networks:
      - app_network

  mongodb:
    image: docker.io/bitnami/mongodb-sharded:6.0
    container_name: mongodb
    profiles: ['server', 'all']
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb
      - MONGODB_SHARDING_MODE=mongos
      - MONGODB_CFG_PRIMARY_HOST=mongodb-cfg
      - MONGODB_CFG_REPLICA_SET_NAME=cfgreplicaset
      - MONGODB_REPLICA_SET_KEY=replicasetkey
      - MONGODB_ROOT_PASSWORD=password
    networks:
      - app_network

  mongodb-shard0:
    image: docker.io/bitnami/mongodb-sharded:6.0
    container_name: mongodb-shard0
    profiles: ['server', 'all']
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard0
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_MONGOS_HOST=mongodb
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey
      - MONGODB_REPLICA_SET_NAME=shard0
    networks:
      - app_network

  mongodb-shard1:
    image: docker.io/bitnami/mongodb-sharded:6.0
    container_name: mongodb-shard1
    profiles: ['server', 'all']
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard1
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_MONGOS_HOST=mongodb
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey
      - MONGODB_REPLICA_SET_NAME=shard1
    networks:
      - app_network

  mongodb-shard2:
    image: docker.io/bitnami/mongodb-sharded:6.0
    container_name: mongodb-shard2
    profiles: ['server', 'all']
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard2
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_MONGOS_HOST=mongodb
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey
      - MONGODB_REPLICA_SET_NAME=shard2
    networks:
      - app_network

  mongodb-cfg:
    image: docker.io/bitnami/mongodb-sharded:6.0
    container_name: mongodb-cfg
    profiles: ['server', 'all']
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-cfg
      - MONGODB_SHARDING_MODE=configsvr
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey
      - MONGODB_REPLICA_SET_NAME=cfgreplicaset
    networks:
      - app_network

  mongoimport:
    build:
      context: ./docker/mongo-import
    container_name: mongoimport
    profiles: ['server', 'all']
    depends_on:
      - mongodb
    networks:
      - app_network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    profiles: ['all']
    ports:
      - 127.0.0.1:8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - app_network

networks:
  app_network:
